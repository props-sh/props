name: Publish artifacts to Maven Repositories

on:
  push:
    branches:
      - main
      - release/*
    tags:
      - v0.*.*

jobs:
  build-and-publish-package:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt
          architecture: x64
          cache: gradle

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@859c33240bd026ce8d5f711f5adcc65c2f8eafc1

      - name: Update the project's version, if the current commit hash is tagged
        run: ./gradlew --no-daemon -x build -x check setReleaseVersionBasedOnGitTag

      - name: Build the project
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-west-1'
        run: ./gradlew build check test integrationTest

      - name: Store the build report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: '[props-sh] build report'
          path: ./**/build/reports
          retention-days: 5

      - name: Prepare GPG signatory for Gradle's signing plugin
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_KEY_SECRET: ${{ secrets.SIGNING_KEY_SECRET }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
        run: |
          set +vx
          mkdir -p ~/.gnupg
          echo "$SIGNING_KEY" | base64 -d > ~/.gnupg/props-signing-key.gpg
          echo "signing.secretKeyRingFile=$(realpath ~/.gnupg/props-signing-key.gpg)" >> ~/.gradle/gradle.properties
          echo "signing.password=$SIGNING_KEY_SECRET" >> ~/.gradle/gradle.properties
          echo "signing.keyId=$SIGNING_KEY_ID" >> ~/.gradle/gradle.properties
          set -vx

      - name: Publish the artifacts
        run: ./gradlew publish
        env:
          USERNAME: ${{ env.GITHUB_ACTOR }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}

      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
          rm -f ~/.gradle/gradle.properties
          rm -f ~/.gnupg/props-signing-key.gpg
